INSERT INTO {SCHEMA_NAME}_ELT.ANALYTICAL_PROFILE

(
    UNIQUE_CUSTOMER_ID,
    ALISVERIS_ADEDI,
    MUSTERI_TOPLAM_CIRO,
    ILK_ODEME_TARIH,
    SON_ODEME_TARIH,
    ILK_ODEMEDEN_GECEN_GUN,
    INDIRIMLI_ALV_SAYISI,
    IND_ALV_ORANI,
    ORT_INDIRIM_ORANI,
    SABAH_ALV,
    OGLEN_ALV,
    AKSAM_ALV,
    GECE_ALV,
    HAFTASONU_ALV,
    HAFTAICI_ALV,
    SABAH_ALISVERIS_CIRO,
    OGLEN_ALISVERIS_CIRO,
    AKSAM_ALISVERIS_CIRO,
    GECE_ALISVERIS_CIRO,
    HAFTASONU_ALV_CIRO,
    HAFTAICI_ALV_CIRO,
    SON_1_AY_TOPLAM_ISLEM,
    SON_3_AY_TOPLAM_ISLEM,
    SON_6_AY_TOPLAM_ISLEM,
    SON_1_YIL_TOPLAM_ISLEM,
    SON_1_AY_ORT_CIRO,
    SON_3_AY_ORT_CIRO,
    SON_6_AY_ORT_CIRO,
    SON_1_YIL_ORT_CIRO,
    SON_1_AY_TOPLAM_CIRO,
    SON_3_AY_TOPLAM_CIRO,
    SON_6_AY_TOPLAM_CIRO,
    SON_1_YIL_TOPLAM_CIRO,
    CEP_TEL_VAR_MI,
    EMAIL_VAR_MI,
    DOGUM_AYI_MI,
    DOGUM_GUNU_MU,
    DOGUM_HAFTASI_MI,
    AGE,
    YAS_SEGMENT,
    CINSIYET_ACIKLAMA,
    MEDENI_HAL_ACIKLAMA,
    MESLEK_AD,
    EGITIM_ADI,
    GERCEK_TUZEL
)

SELECT  B.UNIQUE_CUSTOMER_ID,
        COUNT(CASE WHEN TRX_STATE_ID = 1 THEN A.TRANSACTION_ID END ) ALISVERIS_ADEDI,       
        SUM(A.AMOUNT_AFTER_DISCOUNT) AS MUSTERI_TOPLAM_CIRO,
        MIN(CASE WHEN TRX_STATE_ID = 1 THEN TRUNC(A.TIMED_ID_TRANSACTION) END) AS ILK_ODEME_TARIH,
        MAX(CASE WHEN TRX_STATE_ID = 1 THEN TRUNC(A.TIMED_ID_TRANSACTION) END) AS SON_ODEME_TARIH,
        TRUNC(SYSDATE) - MIN(CASE WHEN TRX_STATE_ID = 1 THEN TRUNC(A.TRANSACTION_DATE) END) ILK_ODEMEDEN_GECEN_GUN,
        COUNT(DISTINCT CASE WHEN TRX_STATE_ID = 1 AND A.AMOUNT_AFTER_DISCOUNT <> A.AMOUNT_TOTAL THEN A.TRANSACTION_ID END) INDIRIMLI_ALV_SAYISI,
        COUNT(DISTINCT CASE WHEN TRX_STATE_ID = 1 AND A.AMOUNT_AFTER_DISCOUNT <> A.AMOUNT_TOTAL THEN A.TRANSACTION_ID END) / COUNT(CASE WHEN TRX_STATE_ID = 1 THEN A.TRANSACTION_ID END) IND_ALV_ORANI,
        AVG(CASE WHEN TRX_STATE_ID = 1 AND AMOUNT_TOTAL<=0 THEN 0 
                 WHEN TRX_STATE_ID = 1 AND AMOUNT_TOTAL>0 THEN 1 - (A.AMOUNT_AFTER_DISCOUNT / A.AMOUNT_TOTAL) END) AS ORT_INDIRIM_ORANI,
        COUNT(DISTINCT CASE WHEN TRX_STATE_ID = 1 AND TRANSACTION_HOUR >= 8 AND TRANSACTION_HOUR<12 THEN A.TRANSACTION_ID END) SABAH_ALV,
        COUNT(DISTINCT CASE WHEN TRX_STATE_ID = 1 AND TRANSACTION_HOUR >= 12 AND TRANSACTION_HOUR<18 THEN A.TRANSACTION_ID END) OGLEN_ALV,
        COUNT(DISTINCT CASE WHEN TRX_STATE_ID = 1 AND TRANSACTION_HOUR >= 18 AND TRANSACTION_HOUR <= 23 THEN A.TRANSACTION_ID END) AKSAM_ALV,
        COUNT(DISTINCT CASE WHEN TRX_STATE_ID = 1 AND TRANSACTION_HOUR >= 0 AND TRANSACTION_HOUR<8 THEN A.TRANSACTION_ID END) GECE_ALV,
        SUM(CASE WHEN TRX_STATE_ID = 1 AND MOD(TO_CHAR(A.TRANSACTION_DATE, 'J'), 7) + 1 IN (6, 7) THEN 1 ELSE 0 END) HAFTASONU_ALV,
        SUM(CASE WHEN TRX_STATE_ID = 1 AND MOD(TO_CHAR(A.TRANSACTION_DATE, 'J'), 7) + 1 NOT IN (6, 7) THEN 1 ELSE 0 END) HAFTAICI_ALV,
        SUM(CASE WHEN TO_NUMBER(TO_CHAR(A.TRANSACTION_DATE, 'HH24')) >= 8 AND TO_NUMBER(TO_CHAR(A.TRANSACTION_DATE, 'HH24')) < 12 THEN A.AMOUNT_AFTER_DISCOUNT ELSE 0 END) AS SABAH_ALISVERIS_CIRO,
        SUM(CASE WHEN TO_NUMBER(TO_CHAR(A.TRANSACTION_DATE, 'HH24')) >= 12 AND TO_NUMBER(TO_CHAR(A.TRANSACTION_DATE, 'HH24')) < 18 THEN A.AMOUNT_AFTER_DISCOUNT ELSE 0 END) AS OGLEN_ALISVERIS_CIRO,
        SUM(CASE WHEN TO_NUMBER(TO_CHAR(A.TRANSACTION_DATE, 'HH24')) >= 18 AND TO_NUMBER(TO_CHAR(A.TRANSACTION_DATE, 'HH24')) < 24 THEN A.AMOUNT_AFTER_DISCOUNT ELSE 0 END) AS AKSAM_ALISVERIS_CIRO,
        SUM(CASE WHEN TO_NUMBER(TO_CHAR(A.TRANSACTION_DATE, 'HH24')) >= 0 AND TO_NUMBER(TO_CHAR(A.TRANSACTION_DATE, 'HH24')) < 8 THEN A.AMOUNT_AFTER_DISCOUNT ELSE 0 END) AS GECE_ALISVERIS_CIRO,
        SUM(CASE WHEN MOD(TO_CHAR(A.TRANSACTION_DATE, 'J'), 7) + 1 IN (6, 7) THEN A.AMOUNT_AFTER_DISCOUNT ELSE 0 END) HAFTASONU_ALV_CIRO,
        SUM(CASE WHEN MOD(TO_CHAR(A.TRANSACTION_DATE, 'J'), 7) + 1 NOT IN (6, 7) THEN A.AMOUNT_AFTER_DISCOUNT ELSE 0 END) HAFTAICI_ALV_CIRO,
        COUNT(DISTINCT CASE WHEN TRX_STATE_ID = 1 AND TRUNC(A.TRANSACTION_DATE) >= ADD_MONTHS(SYSDATE, -1) THEN A.TRANSACTION_ID ELSE NULL END ) AS SON_1_AY_TOPLAM_ISLEM,
        COUNT(DISTINCT CASE WHEN TRX_STATE_ID = 1 AND TRUNC(A.TRANSACTION_DATE) >= ADD_MONTHS(SYSDATE, -3) THEN A.TRANSACTION_ID ELSE NULL END ) AS SON_3_AY_TOPLAM_ISLEM,
        COUNT(DISTINCT CASE WHEN TRX_STATE_ID = 1 AND TRUNC(A.TRANSACTION_DATE) >= ADD_MONTHS(SYSDATE, -6) THEN A.TRANSACTION_ID ELSE NULL END ) AS SON_6_AY_TOPLAM_ISLEM,
        COUNT(DISTINCT CASE WHEN TRX_STATE_ID = 1 AND TRUNC(A.TRANSACTION_DATE) >= ADD_MONTHS(SYSDATE, -12) THEN A.TRANSACTION_ID ELSE NULL END ) AS SON_1_YIL_TOPLAM_ISLEM,
        AVG(CASE WHEN TRUNC(A.TRANSACTION_DATE) >= ADD_MONTHS(SYSDATE, -1) THEN A.AMOUNT_AFTER_DISCOUNT ELSE NULL END ) AS SON_1_AY_ORT_CIRO,
        AVG(CASE WHEN TRUNC(A.TRANSACTION_DATE) >= ADD_MONTHS(SYSDATE, -3) THEN A.AMOUNT_AFTER_DISCOUNT ELSE NULL END ) AS SON_3_AY_ORT_CIRO,
        AVG(CASE WHEN TRUNC(A.TRANSACTION_DATE) >= ADD_MONTHS(SYSDATE, -6) THEN A.AMOUNT_AFTER_DISCOUNT ELSE NULL END ) AS SON_6_AY_ORT_CIRO,
        AVG(CASE WHEN TRUNC(A.TRANSACTION_DATE) >= ADD_MONTHS(SYSDATE, -12) THEN A.AMOUNT_AFTER_DISCOUNT ELSE NULL END ) AS SON_1_YIL_ORT_CIRO,
        SUM(CASE WHEN TRUNC(A.TRANSACTION_DATE) >= ADD_MONTHS(SYSDATE, -1) THEN A.AMOUNT_AFTER_DISCOUNT ELSE NULL END ) AS SON_1_AY_TOPLAM_CIRO,
        SUM(CASE WHEN TRUNC(A.TRANSACTION_DATE) >= ADD_MONTHS(SYSDATE, -3) THEN A.AMOUNT_AFTER_DISCOUNT ELSE NULL END ) AS SON_3_AY_TOPLAM_CIRO,
        SUM(CASE WHEN TRUNC(A.TRANSACTION_DATE) >= ADD_MONTHS(SYSDATE, -6) THEN A.AMOUNT_AFTER_DISCOUNT ELSE NULL END ) AS SON_6_AY_TOPLAM_CIRO,
        SUM(CASE WHEN TRUNC(A.TRANSACTION_DATE) >= ADD_MONTHS(SYSDATE, -12) THEN A.AMOUNT_AFTER_DISCOUNT ELSE NULL END ) AS SON_1_YIL_TOPLAM_CIRO,
        CASE WHEN T.MOBILE_NUMBER IS NULL THEN 0 ELSE 1 END CEP_TEL_VAR_MI,
        CASE WHEN T.EMAIL IS NULL THEN 0 ELSE 1 END EMAIL_VAR_MI,
        CASE WHEN EXTRACT(MONTH FROM T.BIRTH_DATE)= EXTRACT(MONTH FROM SYSDATE) THEN 1 WHEN T.BIRTH_DATE IS NULL THEN NULL ELSE 0 END DOGUM_AYI_MI,
        CASE WHEN EXTRACT(MONTH FROM T.BIRTH_DATE)= EXTRACT(MONTH FROM SYSDATE) AND EXTRACT(DAY FROM T.BIRTH_DATE)= EXTRACT(DAY FROM SYSDATE) THEN 1 WHEN T.BIRTH_DATE IS NULL THEN NULL ELSE 0 END DOGUM_GUNU_MU,
        CASE WHEN T.BIRTH_DATE IS NULL THEN NULL ELSE CASE WHEN TO_DATE( CASE WHEN TO_CHAR(T.BIRTH_DATE, 'ddmm') = '2902' THEN '2802' ELSE TO_CHAR(T.BIRTH_DATE, 'ddmm') END || TO_CHAR(SYSDATE, 'yyyy'), 'DDMMYYYY') 
        BETWEEN TRUNC(SYSDATE) AND TRUNC(SYSDATE + 7) THEN 'EVET' ELSE 'HAYIR' END END AS DOGUM_HAFTASI_MI,
        FLOOR (MONTHS_BETWEEN (SYSDATE,T.BIRTH_DATE) / 12) AGE,
        CASE
		WHEN FLOOR (MONTHS_BETWEEN (SYSDATE,
		T.BIRTH_DATE) / 12) >= 18
		AND FLOOR (MONTHS_BETWEEN (SYSDATE,
		T.BIRTH_DATE) / 12) <= 25 THEN '18-25'
		WHEN FLOOR (MONTHS_BETWEEN (SYSDATE,
		T.BIRTH_DATE) / 12) >= 26
		AND FLOOR (MONTHS_BETWEEN (SYSDATE,
		T.BIRTH_DATE) / 12) <= 35 THEN '26-35'
		WHEN FLOOR (MONTHS_BETWEEN (SYSDATE,
		T.BIRTH_DATE) / 12) >= 36
		AND FLOOR (MONTHS_BETWEEN (SYSDATE,
		T.BIRTH_DATE) / 12) <= 45 THEN '36-45'
		WHEN FLOOR (MONTHS_BETWEEN (SYSDATE,
		T.BIRTH_DATE) / 12) >= 46
		AND FLOOR (MONTHS_BETWEEN (SYSDATE,
		T.BIRTH_DATE) / 12) <= 55 THEN '46-55'
		WHEN FLOOR (MONTHS_BETWEEN (SYSDATE,
		T.BIRTH_DATE) / 12) >= 56 THEN '56+' END YAS_SEGMENT,
	T.GENDER AS CINSIYET_ACIKLAMA,
	T.MARITAL_STATUS AS MEDENI_HAL_ACIKLAMA,
	T.OCCUPATION AS MESLEK_AD,
	T.EDUCATION AS EGITIM_ADI,
	T.REAL_LEGAL_DESC AS GERCEK_TUZEL

FROM 
        {SCHEMA_NAME}.TRANSACTION_MAIN A, {SCHEMA_NAME}.CUSTOMER_STG B, {SCHEMA_NAME}.CUSTOMER_BEST T, {SCHEMA_NAME}.DIM_PROGRAM C
WHERE   1=1
        AND A.CUSTOMER_ID = B.CUSTOMER_ID
        AND B.UNIQUE_CUSTOMER_ID = T.UNIQUE_CUSTOMER_ID
        AND B.PROGRAM_ID = C.PROGRAM_ID
        AND TRX_STATE_ID IN (1,3)
        AND TIMED_ID_TRANSACTION >= TO_NUMBER (TO_CHAR (ADD_MONTHS (SYSDATE, -12 * 2), 'YYYYMMDD'))
        AND A.IS_DELETED=0
GROUP BY B.UNIQUE_CUSTOMER_ID,
 CASE WHEN T.MOBILE_NUMBER IS NULL THEN 0 ELSE 1 END,
        CASE WHEN T.EMAIL IS NULL THEN 0 ELSE 1 END,
        CASE WHEN EXTRACT(MONTH FROM T.BIRTH_DATE)= EXTRACT(MONTH FROM SYSDATE) THEN 1 WHEN T.BIRTH_DATE IS NULL THEN NULL ELSE 0 END,
        CASE WHEN EXTRACT(MONTH FROM T.BIRTH_DATE)= EXTRACT(MONTH FROM SYSDATE) AND EXTRACT(DAY FROM T.BIRTH_DATE)= EXTRACT(DAY FROM SYSDATE) THEN 1 WHEN T.BIRTH_DATE IS NULL THEN NULL ELSE 0 END,
        CASE WHEN T.BIRTH_DATE IS NULL THEN NULL ELSE CASE WHEN TO_DATE( CASE WHEN TO_CHAR(T.BIRTH_DATE, 'ddmm') = '2902' THEN '2802' ELSE TO_CHAR(T.BIRTH_DATE, 'ddmm') END || TO_CHAR(SYSDATE, 'yyyy'), 'DDMMYYYY') 
        BETWEEN TRUNC(SYSDATE) AND TRUNC(SYSDATE + 7) THEN 'EVET' ELSE 'HAYIR' END END,
        FLOOR (MONTHS_BETWEEN (SYSDATE,T.BIRTH_DATE) / 12),
        CASE
		WHEN FLOOR (MONTHS_BETWEEN (SYSDATE,
		T.BIRTH_DATE) / 12) >= 18
		AND FLOOR (MONTHS_BETWEEN (SYSDATE,
		T.BIRTH_DATE) / 12) <= 25 THEN '18-25'
		WHEN FLOOR (MONTHS_BETWEEN (SYSDATE,
		T.BIRTH_DATE) / 12) >= 26
		AND FLOOR (MONTHS_BETWEEN (SYSDATE,
		T.BIRTH_DATE) / 12) <= 35 THEN '26-35'
		WHEN FLOOR (MONTHS_BETWEEN (SYSDATE,
		T.BIRTH_DATE) / 12) >= 36
		AND FLOOR (MONTHS_BETWEEN (SYSDATE,
		T.BIRTH_DATE) / 12) <= 45 THEN '36-45'
		WHEN FLOOR (MONTHS_BETWEEN (SYSDATE,
		T.BIRTH_DATE) / 12) >= 46
		AND FLOOR (MONTHS_BETWEEN (SYSDATE,
		T.BIRTH_DATE) / 12) <= 55 THEN '46-55'
		WHEN FLOOR (MONTHS_BETWEEN (SYSDATE,
		T.BIRTH_DATE) / 12) >= 56 THEN '56+' END,
        T.GENDER,
        T.MARITAL_STATUS,
        T.OCCUPATION,
        T.EDUCATION,
        T.REAL_LEGAL_DESC

HAVING COUNT(CASE WHEN TRX_STATE_ID = 1 THEN A.TRANSACTION_ID END ) > 0